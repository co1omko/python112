WSGI  
Шаблонизатор Jinja

pip install jinja2

{{  }} - выражение для вставки конструкции Python в шаблон
{% %} - спецификатор шаблона 
{# #} - блок комментариев
# ## - строчный комментарий
{% raw %}{% endraw %}
{% fro <выражение> %}
	<повторяемый фрагмент>
{% endfor %}


{% if <условие> %}
	<код>
{% elif <условие> %}
	<код>
{% else %}
	<код>
{% endif %}

{% block title %}
{% endblock %}


from flaskapp.les33flask import create_db

terminal

cd tasks
python
from app import db
db.create_all()


Django

django-admin startproject password_generator_project
cd password_generator_project
python manage.py runserver
python manage.py runserver 4000
python manage.py runserver 1.2.3.4:4000

MVC == MTV

python manage.py startapp generator

создать  templates
	home.html

python manage.py collectstatic

NEW PROJECT

SecondApp
django-admin startproject personal_portfolio
python manage.py startapp skills
python manage.py startapp blog

pip install Pillow 
python manage.py makemigrations
python manage.py migrate

python manage.py createsuperuser создание супер пользователя

python manage.py changepassword admin смена пароля



NEW PROJECT
django-admin startproject todos
python manage.py startapp todo

python manage.py migrate

python manage.py createsuperuser



models.CASCADE - если пользователь будет удален то и удалятся все его задачи
models.PROTECT - заппещает удалять пользователя пока у него есть задачи
models.SET_NULL - задачи останутся в базе данных даже при удалении пользователя, но значения в поле задачи у постов на на NONE
models.SET_DEFAULT - задачи останутся в базе данных даже при удалении пользователя, но значения в поле задачи изм на значение по умолчанию


NEW PROJECT
FourthApp папка проекта

django-admin startproject programming_blog создаем проект

python manage.py runserver запускаем сервер для создания базы данных

python manage.py startapp blog создаем само приложение

зарегестрировать приложение в settings.py 
'blog.apps.BlogConfig'

python manage.py makemigrations
python manage.py migrate

python manage.py createsuperuser создание супер пользователя

python manage.py collectstatic собирает все файлы static в одной папке

utils.py - для создания миксинов

LoginRequiredMixin - закрывает доступ для тех кто не авторизован

@login_required 

paginate_by = N


pip install django-simple-captcha

Создание репозитория 

git init # создание репозитория 
git add -A #добавление всех файлов
git commit -m "name" 
после заходи на git hub и создаем репозиторий там 
git remote add origin https://github.com/co1omko/blog.git # ссылка из github
git push -u origin master

размещение на хостинг : python anywhere
git clone https://github.com/co1omko/blog.git
ls # просмотр папки

mkvirtualenv --python=/usr/bin/python3.9 blogvenv # создание виртуального окружения

deactivate  #выход из виртуального окружения
workon 'имя витуального окружения'# зайти в виртуальное окружение


pip install django
pip install pillow
pip install django-simple-captcha
pip install django-ckeditor

pwd - посмотреть путь к папке
/home/programmingblog008/blog

python manage.py collectstatic



NEW PROJECT : FifthApp


django-admin startproject landing_page

python manage.py runserver
python manage.py startapp cms

python manage.py makemigrations
python manage.py migrate

python manage.py createsuperuser

templates
	cms
		base.html
		carusel.html
		index.html
		
python manage.py startapp price
python manage.py makemigrations
python manage.py migrate

python manage.py startapp crm
 
 
new project

sixthApp

django-admin startproject app

python manage.py runserver
python manage.py startapp exchange
python manage.py startapp weather
python manage.py makemigrations
python manage.py migrate

python manage.py createsuperuser

4710969a4071456088b165908220509